<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>/////////// Global variables /////////////

int lockChamber = 2;            //3rd queue[2] identifier in queuearray is for lockchamber

// Pump
chan pumpIn;
chan pumpOut;
chan pumpIdle;

//Doors
const int doors = 2;
typedef int[0, doors-1] id_D;

chan openDoor[id_D];
chan closeDoor[id_D];
chan isOpen[id_D];
chan isClosed[id_D];

// Boat(s) 
chan requestForQueue;
chan requestForPop[int[0,2]];
chan requestForTransfer[int[0,1]];        //[0,1] because 2 is lockchamber, and transfer from servingQueue to lockChamber 

// Queues
chan queueIsTransfered[int[0,2]];
chan queueIsEmpty[int[0,2]];
chan checkIfFull[int[0,2]];
chan checkedQueueIsFull;

// Signaling
chan changeSignal[int[0,5]];
const int noSignal = 0;
const int doorOpening = 1;
const int doorOpened = 2;
const int doorClosing = 3;
const int doorClosed = 4;
const int waterLevelChanging = 5;</declaration>
	<template>
		<name x="5" y="5">Main_Controller</name>
		<declaration>// Place local declarations here.


int[0,10] waterLevelLeft = 4;
int[0,10] waterLevelRight = 8;
int[0,10] waterLevelLockChamber = 3;        
int[0,10] waterLevelTarget = 0;
int[0,10] waterLevelAtDoor[2];

int[0,2] servingQueue;



// Doors
int[0, doors-1] firstDoor;
int[0, doors-1] secondDoor;


void defineDoorOrder(){
    waterLevelAtDoor[0] = waterLevelLeft;
    waterLevelAtDoor[1] = waterLevelRight;
    if(servingQueue==0){
        firstDoor=0;
        secondDoor=1;
    }
    else{
       firstDoor=1;
       secondDoor=0;
    }
}

// Used for setting the waterleveltarget based on whether first or second door needs to be opened
void setWaterLevelTarget(int i){
    if(i == 0){
       waterLevelTarget = waterLevelLeft;
    }
    else{
        waterLevelTarget = waterLevelRight;
    }
}

// Compare waterlevel lockchamber with left or right waterlevel and return true if waterlevel in lockchamber is equal to waterleveltarget
bool isEqualToTarget(){
    if(waterLevelLockChamber == waterLevelTarget){ 
        return true;
    }
    else {
        return false;
    }
}


// Compare waterlevel lockchamber with left or right waterlevel and return true if waterlevel in lockchamber is lower than waterleveltarget
bool isLowerThanTarget(){
    if(waterLevelLockChamber &lt; waterLevelTarget){ 
        return true;
    }
    else {
        return false;
    }
}
// Compare waterlevel lockchamber with left or right waterlevel and return true if waterlevel in lockchamber is higher than waterleveltarget
bool isHigherThanTarget(){
    if(waterLevelLockChamber &gt; waterLevelTarget){ 
        return true;
    }
    else {
        return false;
    }
}</declaration>
		<location id="id0" x="-714" y="331">
		</location>
		<location id="id1" x="-476" y="850">
		</location>
		<location id="id2" x="510" y="272">
		</location>
		<location id="id3" x="1700" y="850">
		</location>
		<location id="id4" x="314" y="850">
		</location>
		<location id="id5" x="714" y="850">
		</location>
		<location id="id6" x="1428" y="850">
			<name x="1385" y="807">Boats_enter</name>
		</location>
		<location id="id7" x="-221" y="850">
			<name x="-238" y="807">Empty_chamber</name>
		</location>
		<location id="id8" x="510" y="170">
			<name x="527" y="128">start_Process</name>
		</location>
		<location id="id9" x="680" y="544">
		</location>
		<location id="id10" x="340" y="544">
		</location>
		<location id="id11" x="510" y="850">
			<name x="484" y="875">Pump_idle</name>
			<committed/>
		</location>
		<location id="id12" x="-68" y="170">
			<name x="-78" y="136">Queue_full</name>
		</location>
		<location id="id13" x="-714" y="850">
			<name x="-867" y="833">Seconddoor_closing</name>
		</location>
		<location id="id14" x="102" y="850">
			<name x="42" y="790">Seconddoor_opening</name>
		</location>
		<location id="id15" x="-714" y="476">
			<name x="-875" y="467">Seconddoor_closed</name>
		</location>
		<location id="id16" x="-93" y="850">
			<name x="-110" y="807">Seconddoor_open</name>
		</location>
		<location id="id17" x="510" y="748">
			<name x="391" y="756">Pumping_done</name>
			<committed/>
		</location>
		<location id="id18" x="510" y="365">
			<name x="391" y="340">Pumping_start</name>
		</location>
		<location id="id19" x="1955" y="272">
			<name x="1980" y="264">Firstdoor_closed</name>
		</location>
		<location id="id20" x="1955" y="850">
			<name x="1980" y="799">Firstdoor_closing</name>
		</location>
		<location id="id21" x="1156" y="850">
			<name x="1105" y="807">Firstdoor_open</name>
		</location>
		<location id="id22" x="952" y="850">
			<name x="909" y="807">Firstdoor_opening</name>
		</location>
		<location id="id23" x="-714" y="170">
			<name x="-824" y="136">Wait_for_boat</name>
		</location>
		<location id="id24" x="-918" y="170">
			<name x="-928" y="136">Initial</name>
			<committed/>
		</location>
		<init ref="id24"/>
		<transition>
			<source ref="id0"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-680" y="229">changeSignal[noSignal]?</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-688" y="399">changeSignal[doorClosed]!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-680" y="850">changeSignal[doorClosing]!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-442" y="850">queueIsEmpty[lockChamber]?</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="1122" y="289">changeSignal[doorClosed]!</label>
			<label kind="assignment" x="1122" y="272">setWaterLevelTarget(secondDoor)</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="527" y="314">changeSignal[waterLevelChanging]!</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id2"/>
			<label kind="assignment" x="527" y="221">setWaterLevelTarget(firstDoor)</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="1742" y="824">changeSignal[doorClosing]!</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="1445" y="824">queueIsTransfered[lockChamber]?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="119" y="833">changeSignal[doorOpening]!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id4"/>
			<label kind="guard" x="119" y="858">waterLevelLockChamber == waterLevelAtDoor[secondDoor]</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="739" y="833">changeSignal[doorOpening]!</label>
			<nail x="731" y="850"/>
			<nail x="722" y="850"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id5"/>
			<label kind="guard" x="544" y="858">waterLevelLockChamber == waterLevelAtDoor[firstDoor]</label>
			<nail x="552" y="850"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id23"/>
			<label kind="select" x="-747" y="8">i:int[0,1]</label>
			<label kind="synchronisation" x="-756" y="25">checkIfFull[i]!</label>
			<label kind="assignment" x="-764" y="42">servingQueue:=i</label>
			<nail x="-663" y="68"/>
			<nail x="-756" y="68"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="1300" y="960">requestForTransfer[servingQueue]!</label>
			<nail x="1368" y="952"/>
			<nail x="1487" y="952"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="1207" y="824">changeSignal[doorOpened]!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-263" y="960">requestForPop[lockChamber]!</label>
			<nail x="-162" y="952"/>
			<nail x="-264" y="952"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-178" y="875">changeSignal[doorOpened]!</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id23"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id8"/>
			<label kind="assignment" x="187" y="280">defineDoorOrder()</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="807" y="510">isHigherThanTarget()</label>
			<label kind="assignment" x="807" y="527">waterLevelLockChamber--</label>
			<nail x="790" y="476"/>
			<nail x="790" y="612"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="33" y="510">isLowerThanTarget()</label>
			<label kind="assignment" x="33" y="527">waterLevelLockChamber++</label>
			<nail x="229" y="476"/>
			<nail x="229" y="612"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id17"/>
			<label kind="guard" x="221" y="654">isEqualToTarget()</label>
			<label kind="synchronisation" x="374" y="731">pumpIdle!</label>
			<nail x="340" y="680"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id17"/>
			<label kind="guard" x="688" y="654">isEqualToTarget()</label>
			<label kind="synchronisation" x="569" y="731">pumpIdle!</label>
			<nail x="680" y="680"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id9"/>
			<label kind="guard" x="697" y="425">isHigherThanTarget()</label>
			<label kind="synchronisation" x="697" y="442">pumpOut!</label>
			<nail x="680" y="425"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id10"/>
			<label kind="guard" x="195" y="416">isLowerThanTarget()</label>
			<label kind="synchronisation" x="280" y="433">pumpIn!</label>
			<nail x="493" y="374"/>
			<nail x="340" y="425"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id17"/>
			<label kind="guard" x="518" y="425">isEqualToTarget()</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="518" y="782">changeSignal[noSignal]!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-790" y="960">closeDoor[secondDoor]!</label>
			<nail x="-654" y="952"/>
			<nail x="-764" y="952"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="51" y="960">openDoor[secondDoor]!</label>
			<nail x="161" y="952"/>
			<nail x="51" y="952"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="1895" y="952">closeDoor[firstDoor]!</label>
			<nail x="2014" y="952"/>
			<nail x="1904" y="952"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="893" y="960">openDoor[firstDoor]!</label>
			<nail x="1012" y="952"/>
			<nail x="901" y="952"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-331" y="153">checkedQueueIsFull?</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-680" y="595">isClosed[secondDoor]?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-51" y="858">isOpen[secondDoor]?</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="1802" y="518">isClosed[firstDoor]?</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="986" y="850">isOpen[firstDoor]?</label>
			<nail x="960" y="850"/>
		</transition>
	</template>
	<template>
		<name>Boat</name>
		<declaration>clock x;</declaration>
		<location id="id25" x="34" y="0">
			<name x="-8" y="-8">idle</name>
		</location>
		<init ref="id25"/>
		<transition>
			<source ref="id25"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="110" y="-25">requestForQueue!</label>
			<label kind="assignment" x="110" y="-42">x:=0</label>
			<nail x="102" y="-51"/>
			<nail x="102" y="59"/>
		</transition>
	</template>
	<template>
		<name>Request_Handler</name>
		<declaration>int[0,2] queueToPop;
int[0,2] queueToAdd;
int[0,2] queueToCheck;




const int size = 3;
int tail[size];
// Left side
int queue0[size];
// Right side
int queue1[size];
// Lockchamber
int queue2[size];
// Global since function cant return array
int queueToModify[size];


bool isFull(int queueID){
    return (tail[queueID]==size);
}

bool isEmpty(int queueID){
    return (tail[queueID]==0);
}


// Needs renaming
int checkQueueSideFull(){
    if(isFull(0)) return 0;
    else if(isFull(1)) return 1;
    else return -1;
}


// gets the right queue to be modified
void getQueue(int queueID){
    if(queueID == 0) queueToModify = queue0;
    if(queueID == 1) queueToModify = queue1;
    if(queueID == 2) queueToModify = queue2;
}
// Sets the right queue as queue to be modified
void setQueue(int queueID){
    if(queueID == 0) queue0 = queueToModify;
    if(queueID == 1) queue1 = queueToModify;
    if(queueID == 2) queue2 = queueToModify;
}


void add(int boat, int queueID){
    getQueue(queueID);
    if (isEmpty(queueID)){
        queueToModify[0] = boat;
        tail[queueID]++;
    }    
    else if(!isFull(queueID)) {
        queueToModify[tail[queueID]] = boat;
        tail[queueID]++;
    }
    setQueue(queueID);
}

int pop(int queueID){
    int k = 0;
    int temp;
    getQueue(queueID); 
    temp=queueToModify[0];
    // If queue is empty
    if(tail[queueID] &lt;= 0){ 
        return 0;
    }
    else{
        for(k = 0; k&lt;size-1; k++){
            queueToModify[k]=queueToModify[k+1];
            queueToModify[k+1] = 0;
        }
        setQueue(queueID);
        tail[queueID]--;
        return(temp);
    }
}



</declaration>
		<location id="id26" x="-671" y="170">
		</location>
		<location id="id27" x="714" y="170">
		</location>
		<location id="id28" x="221" y="170">
		</location>
		<location id="id29" x="-238" y="170">
			<committed/>
		</location>
		<location id="id30" x="-476" y="0">
			<name x="-535" y="-34">open_for_request</name>
		</location>
		<init ref="id30"/>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<nail x="-238" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id30"/>
			<label kind="guard" x="-646" y="187">isFull(queueToCheck)</label>
			<label kind="synchronisation" x="-637" y="204">checkedQueueIsFull!</label>
			<nail x="-595" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id30"/>
			<label kind="guard" x="-858" y="187">!isFull(queueToCheck)</label>
			<nail x="-739" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id26"/>
			<label kind="select" x="-663" y="25">i:int[0,2]</label>
			<label kind="synchronisation" x="-663" y="42">checkIfFull[i]?</label>
			<label kind="assignment" x="-663" y="59">queueToCheck:=i</label>
			<nail x="-671" y="0"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id27"/>
			<label kind="select" x="722" y="25">i:int[0,1]</label>
			<label kind="synchronisation" x="722" y="42">requestForTransfer[i]?</label>
			<label kind="assignment" x="722" y="59">queueToPop:=i,
add(pop(queueToPop), lockChamber)</label>
			<nail x="714" y="0"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id28"/>
			<label kind="select" x="229" y="25">i:int[0,2]</label>
			<label kind="synchronisation" x="229" y="42">requestForPop[i]?</label>
			<label kind="assignment" x="229" y="59">queueToPop:=i,
pop(queueToPop)</label>
			<nail x="221" y="0"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id30"/>
			<label kind="guard" x="255" y="195">isEmpty(queueToPop)</label>
			<label kind="synchronisation" x="263" y="212">queueIsEmpty[queueToPop]!</label>
			<nail x="297" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id30"/>
			<label kind="guard" x="765" y="204">isFull(lockChamber)</label>
			<label kind="synchronisation" x="773" y="221">queueIsTransfered[lockChamber]!</label>
			<nail x="790" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id30"/>
			<label kind="guard" x="527" y="212">!isFull(lockChamber)</label>
			<nail x="629" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id30"/>
			<label kind="guard" x="25" y="204">!isEmpty(queueToPop)</label>
			<nail x="136" y="306"/>
			<nail x="-476" y="306"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="select" x="-229" y="25">BoatID:int[1,5],
queueID:int[0,1]</label>
			<label kind="synchronisation" x="-229" y="59">requestForQueue?</label>
			<label kind="assignment" x="-229" y="76">queueToAdd:=queueID,
add(BoatID, queueToAdd)</label>
			<nail x="-238" y="0"/>
		</transition>
	</template>
	<template>
		<name>Signal</name>
		<location id="id31" x="646" y="-102">
			<name x="663" y="-110">Waterlevel_changing</name>
		</location>
		<location id="id32" x="374" y="-102">
			<name x="391" y="-144">Door_closed</name>
		</location>
		<location id="id33" x="102" y="-102">
			<name x="119" y="-144">Door_closing</name>
		</location>
		<location id="id34" x="-170" y="-102">
			<name x="-153" y="-136">Door_opened</name>
		</location>
		<location id="id35" x="-442" y="-102">
			<name x="-425" y="-136">Door_opening</name>
		</location>
		<location id="id36" x="-604" y="-102">
			<name x="-586" y="-110">No_signal</name>
		</location>
		<init ref="id36"/>
		<transition>
			<source ref="id34"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-152" y="-119">changeSignal[doorClosing]?</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="119" y="-127">changeSignal[doorClosed]?</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="391" y="-127">changeSignal[waterLevelChanging]?</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="-424" y="-119">changeSignal[doorOpened]?</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="654" y="-59">changeSignal[noSignal]?</label>
			<nail x="646" y="-34"/>
			<nail x="-604" y="-34"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="382" y="-59">changeSignal[noSignal]?</label>
			<nail x="374" y="-34"/>
			<nail x="-604" y="-34"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="110" y="-59">changeSignal[noSignal]?</label>
			<nail x="102" y="-34"/>
			<nail x="-604" y="-34"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="-161" y="-59">changeSignal[noSignal]?</label>
			<nail x="-170" y="-34"/>
			<nail x="-604" y="-34"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="-433" y="-59">changeSignal[noSignal]?</label>
			<nail x="-442" y="-34"/>
			<nail x="-604" y="-34"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="654" y="-161">changeSignal[waterLevelChanging]?</label>
			<nail x="-604" y="-170"/>
			<nail x="646" y="-170"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="391" y="-161">changeSignal[doorClosed]?</label>
			<nail x="-604" y="-170"/>
			<nail x="374" y="-170"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="119" y="-161">changeSignal[doorClosing]?</label>
			<nail x="-604" y="-170"/>
			<nail x="102" y="-170"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="-153" y="-153">changeSignal[doorOpened]?</label>
			<nail x="-604" y="-170"/>
			<nail x="-170" y="-170"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="-425" y="-153">changeSignal[doorOpening]?</label>
			<nail x="-604" y="-170"/>
			<nail x="-442" y="-170"/>
		</transition>
	</template>
	<template>
		<name>Waterpump</name>
		<location id="id37" x="68" y="34">
			<name x="76" y="0">Pump_out</name>
		</location>
		<location id="id38" x="-136" y="34">
			<name x="-204" y="0">Pump_in</name>
		</location>
		<location id="id39" x="-34" y="-34">
			<name x="-42" y="-68">Idle</name>
		</location>
		<init ref="id39"/>
		<transition>
			<source ref="id37"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-8" y="34">pumpIdle?</label>
			<nail x="-34" y="34"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-119" y="34">pumpIdle?</label>
			<nail x="-34" y="34"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="-8" y="-59">pumpOut?</label>
			<nail x="68" y="-34"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-119" y="-59">pumpIn?</label>
			<nail x="-136" y="-34"/>
		</transition>
	</template>
	<template>
		<name>Door</name>
		<parameter>id_D i</parameter>
		<location id="id40" x="-127" y="68">
			<name x="-135" y="85">Is_Closing</name>
		</location>
		<location id="id41" x="-246" y="0">
			<name x="-280" y="17">Opened</name>
		</location>
		<location id="id42" x="-127" y="-59">
			<name x="-137" y="-93">is_Opening</name>
		</location>
		<location id="id43" x="0" y="0">
			<name x="-10" y="-34">Closed</name>
		</location>
		<init ref="id43"/>
		<transition>
			<source ref="id40"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-68" y="42">isClosed[i]!</label>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id40"/>
			<label kind="synchronisation" x="-255" y="51">closeDoor[i]?</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-238" y="-59">isOpen[i]!</label>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-76" y="-59">openDoor[i]?</label>
		</transition>
	</template>
	<system>// List one or more processes to be composed into a system.
system Main_Controller, Boat, Request_Handler, Door, Waterpump, Signal;
    </system>
	<queries>
	</queries>
</nta>
